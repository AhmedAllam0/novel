{
  "name": "📖 Book Metadata Extractor",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "book-metadata",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "meta-001-webhook",
      "name": "Webhook Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [0, 0],
      "webhookId": "book-meta-webhook-001"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "bookName",
              "value": "={{ $json.bookName || $json.title || $json.query }}",
              "type": "string"
            },
            {
              "id": "2",
              "name": "authorName",
              "value": "={{ $json.author || '' }}",
              "type": "string"
            },
            {
              "id": "3",
              "name": "isbn",
              "value": "={{ $json.isbn || '' }}",
              "type": "string"
            }
          ]
        }
      },
      "id": "meta-002-extract",
      "name": "Extract Input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [240, 0]
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {
          "temperature": 0.2,
          "maxTokens": 1500
        }
      },
      "id": "meta-003-model",
      "name": "Mistral AI",
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [480, 160],
      "credentials": {
        "mistralCloudApi": {
          "id": "8RlFJeQEIK1RW3KX",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=استخرج معلومات تفصيلية عن الكتاب التالي:\n\n📚 اسم الكتاب: {{ $('Extract Input').item.json.bookName }}\n{{ $('Extract Input').item.json.authorName ? '👤 المؤلف: ' + $('Extract Input').item.json.authorName : '' }}\n{{ $('Extract Input').item.json.isbn ? '📘 ISBN: ' + $('Extract Input').item.json.isbn : '' }}\n\nقدم المعلومات بالتنسيق التالي (استخدم HTML فقط):\n\n📚 <b>[اسم الكتاب الكامل]</b>\n\n👤 <b>المؤلف:</b> [الاسم الكامل]\n📅 <b>سنة النشر:</b> [السنة]\n🏛️ <b>دار النشر:</b> [اسم الدار]\n📖 <b>النوع:</b> [النوع الأدبي]\n🌍 <b>اللغة الأصلية:</b> [اللغة]\n📄 <b>عدد الصفحات:</b> [العدد]\n📘 <b>ISBN:</b> [الرقم إن وجد]\n⭐ <b>التقييم:</b> [من 5]\n\n🔍 <b>نبذة مختصرة:</b>\n[3-4 أسطر عن الكتاب]\n\n🎯 <b>المواضيع الرئيسية:</b>\n• [موضوع 1]\n• [موضوع 2]\n• [موضوع 3]\n\n🏆 <b>الجوائز:</b>\n[إن وجدت، وإلا اكتب \"لا توجد جوائز مسجلة\"]\n\n💡 <b>مناسب لـ:</b>\n[نوع القراء المناسبين]",
        "options": {
          "systemMessage": "أنت خبير في الأدب والكتب. مهمتك استخراج معلومات دقيقة وشاملة عن الكتب.\n\nتشمل المعلومات:\n- بيانات المؤلف\n- تاريخ وبيانات النشر\n- التصنيف والنوع\n- ملخص موجز\n- التقييمات والجوائز\n- المواضيع الرئيسية\n\nكن دقيقاً ومختصراً. استخدم HTML للتنسيق فقط."
        }
      },
      "id": "meta-004-chain",
      "name": "Extract Metadata",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [480, 0]
    },
    {
      "parameters": {
        "jsCode": "// Parse and structure metadata\nconst inputData = $input.first().json;\nconst bookName = $('Extract Input').item.json.bookName;\n\nlet responseText = inputData.response || inputData.output || inputData.text || '❌ فشل استخراج البيانات';\n\n// Convert Markdown to HTML\nresponseText = responseText.replace(/\\*\\*(.+?)\\*\\*/g, '<b>$1</b>');\nresponseText = responseText.replace(/(?<!\\*)\\*(?!\\*)(.+?)(?<!\\*)\\*(?!\\*)/g, '<i>$1</i>');\n\n// Extract structured data\nconst metadata = {\n  title: extractField(responseText, 'اسم الكتاب', 'المؤلف'),\n  author: extractField(responseText, 'المؤلف:', 'سنة النشر:'),\n  year: extractField(responseText, 'سنة النشر:', 'دار النشر:'),\n  publisher: extractField(responseText, 'دار النشر:', 'النوع:'),\n  genre: extractField(responseText, 'النوع:', 'اللغة الأصلية:'),\n  language: extractField(responseText, 'اللغة الأصلية:', 'عدد الصفحات:'),\n  pages: extractField(responseText, 'عدد الصفحات:', 'ISBN:'),\n  isbn: extractField(responseText, 'ISBN:', 'التقييم:'),\n  rating: extractField(responseText, 'التقييم:', 'نبذة')\n};\n\nfunction extractField(text, startMarker, endMarker) {\n  const startIdx = text.indexOf(startMarker);\n  if (startIdx === -1) return '';\n  \n  const valueStart = startIdx + startMarker.length;\n  const endIdx = text.indexOf(endMarker, valueStart);\n  \n  if (endIdx === -1) return text.substring(valueStart, valueStart + 100).split('\\n')[0].replace(/<[^>]*>/g, '').trim();\n  \n  return text.substring(valueStart, endIdx).replace(/<[^>]*>/g, '').trim();\n}\n\n// Add footer\nresponseText += '\\n\\n━━━━━━━━━━━━━━━━\\n📊 <i>بيانات موثوقة من مصادر موثوقة</i>';\n\nreturn [{\n  json: {\n    text: responseText,\n    parse_mode: 'HTML',\n    metadata: metadata,\n    searchQuery: bookName\n  }\n}];"
      },
      "id": "meta-005-format",
      "name": "Format Metadata",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [720, 0]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "meta-006-respond",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [960, 0]
    }
  ],
  "connections": {
    "Webhook Input": {
      "main": [
        [
          {
            "node": "Extract Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Input": {
      "main": [
        [
          {
            "node": "Extract Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral AI": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Metadata",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract Metadata": {
      "main": [
        [
          {
            "node": "Format Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Metadata": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "tags": []
}
